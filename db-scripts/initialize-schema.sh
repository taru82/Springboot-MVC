#!/bin/bash -e

#will fail if it's not up and running
docker exec -it sample-local-mysql-db mysql --version


docker exec -it sample-local-mysql-db mysql  -h127.0.0.1 -P3306 -uSAMPLES -pSAMPLES_PASSWORD -e"
  CREATE SCHEMA IF NOT EXISTS DBO_SAMPLE;

  CREATE USER IF NOT EXISTS 'DBO_SAMPLE_USER'@'localhost' IDENTIFIED BY 'DBO_SAMPLE_PASSWORD';
  CREATE USER IF NOT EXISTS 'DBO_SAMPLE_USER'@'%' IDENTIFIED BY 'DBO_SAMPLE_PASSWORD';

  GRANT SAMPLE_RO TO 'DBO_SAMPLE_USER'@'%';
  SET DEFAULT ROLE 'SAMPLE_RO' TO 'DBO_SAMPLE_USER'@'%';

  GRANT ALL PRIVILEGES ON DBO_SAMPLE.* TO 'DBO_SAMPLE_USER'@'localhost' WITH GRANT OPTION;
  GRANT ALL PRIVILEGES ON DBO_SAMPLE.* TO 'DBO_SAMPLE_USER'@'%' WITH GRANT OPTION;

  CREATE ROLE IF NOT EXISTS DBO_SAMPLE_RW;

  GRANT SELECT, UPDATE, INSERT, DELETE ON DBO_SAMPLE.* TO DBO_SAMPLE_RW;

  CREATE USER IF NOT EXISTS 'DATA_API_SM'@'localhost' IDENTIFIED BY 'DATA_API_SM_PASSWORD';
  CREATE USER IF NOT EXISTS 'DATA_API_SM'@'%' IDENTIFIED BY 'DATA_API_SM_PASSWORD';

  GRANT DBO_SAMPLE_RW TO 'DATA_API_SM'@'localhost';
  GRANT DBO_SAMPLE_RW TO 'DATA_API_SM'@'%';

  SET DEFAULT ROLE 'DBO_SAMPLE_RW' TO 'DATA_API_SM'@'localhost';
  SET DEFAULT ROLE 'DBO_SAMPLE_RW' TO 'DATA_API_SM'@'%';

  DROP USER IF EXISTS 'root'@'localhost';
  DROP USER IF EXISTS 'root'@'%';

  FLUSH PRIVILEGES;
"
